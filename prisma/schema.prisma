generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  questions Question[] @relation("UserQuestions")
  answers   Answer[]   @relation("UserAnswers")
}

model Question {
  id          Int      @id @default(autoincrement())
  title       String
  options     Option[]
  answer      String?
  user        User?    @relation("UserQuestions", fields: [userId], references: [id])
  userId      String?
  submittedAt DateTime @default(now())
  answers     Answer[]
}


model Option {
  id           Int       @id @default(autoincrement())
  value        String
  question     Question  @relation(fields: [questionId], references: [id])
  questionId   Int
  answers      Answer[]
}

model Answer {
  id           Int       @id @default(autoincrement())
  option       Option    @relation(fields: [optionId], references: [id])
  optionId     Int
  question     Question? @relation(fields: [questionId], references: [id])
  questionId   Int?
  user         User?     @relation("UserAnswers", fields: [userId], references: [id])
  userId       String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

